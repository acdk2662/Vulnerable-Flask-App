name: Dynamic Analysis Security Testing
on: 
  push:
    branches:
      - 'new-dev'
jobs:
  Build-app:
    name: Run the test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: python vulnerable-flask-app.py &
    
  Burp-Dastardly:
    name: DAST Running
    needs: Build-app
    runs-on: ubuntu-latest
    steps:
      - name: Run Dastardly Action Step
        continue-on-error: true
        uses: PortSwigger/dastardly-github-action@main
        with:
          target-url: ${{ secrets.TARGET2 }}
      
      - name: Publish Test Report with JUnit
        if: always()
        uses: mikepenz/action-junit-report@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/dastardly-report.xml'
          require_tests: true
      
      # - name: Archive production artifgacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: test
      #     path: '**/dist/dastadly-report.xml'

      # - name: artifact
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: test
      #     path: '**/dist/dastabdly-report.xml'

    # - name: executing remote ssh commands using password
    #   uses: appleboy/ssh-action@v1.0.0
    #   with:
    #     host: ${{ secrets.HOST }}
    #     username: ${{ secrets.USERNAME }}
    #     password: ${{ secrets.PASSWORD }}
    #     port: ${{ secrets.PORT }}
    #     script: bash /home/acdk/config/killApp.sh && python3 /home/acdk/Vulnerable-Flask-App/vulnerable-flask-app.py &

    # - name: create xml placholder file
    #   run: |
    #     touch report_xml.xml
    #     chmod a+w report_xml.xml

    # - name: owasp-scan
    #   uses: zaproxy/action-baseline@v0.9.0
    #   with:
    #     token: ${{ secrets.GITHUB_TOKEN}}
    #     docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
    #     target: ${{ secrets.TARGET }}x
    #     fail_action: false
    #     cmd_options: "-x ~/report_xml.xml"


